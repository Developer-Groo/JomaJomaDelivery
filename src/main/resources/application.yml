spring:
  application:
    name: JomaJomaDelivery

  jwt:
    secret-key: D3AA89C3729F6627EA157124738DFAAAF66CEB85B3A79392473BECB3D9

  datasource:
    url: jdbc:mysql://localhost:3306/joma
    username: root
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
        use_sql_comments: true

  security:
    oauth2:
      client:
          registration: # 외부 서비스에서 우리 서비스를 특정하기 위한 설정 (필수!!)
            naver: # 서비스명
              client-name: Naver # 서비스명
              client-id: iUUHltDBSq8BCxdIWlTz # 서비스에서 발급 받은 아이디
              client-secret: pVY9_B7bk2 # 서비스에서 발급 받은 비밀번호
              redirect-uri: http://localhost:8080/login/oauth2/code/naver # 서비스에 등록한 우리쪽 로그인 성공 URI (관습적으로 마지막은 서비스명으로 작성)
              authorization-grant-type: authorization_code
              scope: # 리소스 서버에서 가져올 데이터 범위
                - name
                - email

          provider: # provider 등록도 필수적이지만 전세계적으로 유명한 서비스(google, github 등)은 spring oauth2-client 가 자동으로 설정해줌 (네이버, 카카오 는 필수 등록)
            naver: # 서비스명
             authorization-uri: https://nid.naver.com/oauth2.0/authorize # 서비스 로그인 창 주소
             token-uri: https://nid.naver.com/oauth2.0/token # 토큰 발급 서버 주소
             user-info-uri: https://openapi.naver.com/v1/nid/me # 사용자 정보 획득 주소
             user-name-attribute: response # 응답 데이터 변수